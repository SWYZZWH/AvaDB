# drop table
{"type": "nosql", "drop": {"table_name": "test_cli"}}

# create table
{"type": "nosql", "create": {"table_name": "test_cli"}}
{"type": "nosql", "create": {"table_name": "allsales"}}
# insert
{"type":"nosql", "insert": {"table_name": "test_cli", "records": [{"col1": {"col3": 1}, "col2": "a"}, {"col1": {"col3": 3}, "col2": "a"}, {"col1": {"col3": 1}, "col2": "b"}, {"col1": {"col3": 2}, "col2": "b"}, {"col1": {"col3": 1}, "col2": "c"}, {"col1": {"col3": 1}, "col2": "c"}]}}

# delete (1, a)
{"type":"nosql", "delete": {"table_name": "test_cli", "expr": {"op":"&&","v1":{"op":"==","v1":"0::col1..col3","v2":1},"v2":{"op":"==","v1":"0::col2","v2":"a"}}}}

# select (get all records)
{"type":"nosql","query":{"src_table":"test_cli","row_filter":{"op":">","v1":"0::col1..col3","v2":-100}}}

# insert (1, a) back
{"type":"nosql", "insert": {"table_name": "test_cli", "records": [{"col1..col3": 1, "col2": "a"}]}}

# select (get all records)
{"type":"nosql","query":{"src_table":"test_cli","row_filter":{"op":">","v1":"0::col1..col3","v2":-100}}}


# projection (get all records)
{"type":"nosql","query":{"src_table":"test_cli","row_filter":{"op":">","v1":"0::col1..col3","v2":-100}, "desired_columns": ["::col1..col3"]}}

# select (should return (2, b))
{"type":"nosql","query":{"src_table":"test_cli","row_filter":{"op":"&&","v1":{"op":">","v1":"0::col1..col3","v2":1},"v2":{"op":"==","v1":"0::col2","v2":"b"}}}}

# update record (2, b) -> (10, b)
{"type":"nosql","update":{"table_name":"test_cli","expr":{"op":"&&","v1":{"op":">","v1":"0::col1..col3","v2":1},"v2":{"op":"==","v1":"0::col2","v2":"b"}}, "record": {"col1":{"col3":10},"col2":"b"}}}

# select (now will return empty)
{"type":"nosql","query":{"src_table":"test_cli","row_filter":{"op":"&&","v1":{"op":"==","v1":"0::col1..col3","v2":2},"v2":{"op":"==","v1":"0::col2","v2":"b"}}}}

# group by col2 & aggregation
{"type":"nosql","query":{"src_table":"test_cli","desired_columns":["::col2","::col1..col3__MAX","::col1..col3__MIN","::col1..col3__COUNT","::col1..col3__SUM","::col1..col3__AVG"],"group_by":["::col2"]}}

# sorting
{"type":"nosql","query":{"src_table":"test_cli","order_by":[{"column":"::col1..col3","is_asc":true}]}}
{"type":"nosql","query":{"src_table":"test_cli","order_by":[{"column":"::col2","is_asc":false}]}}

# join
{"type": "nosql", "drop": {"table_name": "test_cli_2"}}
{"type": "nosql", "create": {"table_name": "test_cli_2"}}
{"type":"nosql", "insert": {"table_name": "test_cli_2", "records": [{"col3": 5, "col2": "a"}, {"col3": 6, "col2": "b"}]}}
{"type":"nosql","query":{"src_table":{"t1":"test_cli","t2":"test_cli_2","join_type":"outer","join_condition":{"op":"==","v1":"0::col2","v2":"0::col2"}},"desired_columns":["::0::col1..col3","::0::col2","::1::col2","::1::col3"]}}

# drop table
{"type": "nosql", "drop": {"table_name": "test_cli"}}

# select (get all records, no results)
{"type":"nosql","query":{"src_table":"test_cli","row_filter":{"op":">","v1":"0::col1..col3","v2":-100}}}

# ***********************demo***************************

# drop table
{"type": "nosql", "drop": {"table_name": "test_cli"}}

# create table
{"type": "nosql", "create": {"table_name": "test_cli"}}
{"type": "nosql", "create": {"table_name": "allsales"}}

# insert checked
{"type":"nosql", "insert": {"table_name": "airline_delay", "records": [{"Airport":{"Code":"WAZ","Name":"Los Angeles, Weihao and Zhenyu Internation"},"Time":{"Label":"2023/11","Month":11,"Month Name":"November","Year":2023},"Statistics":{"# of Delays":{"Carrier":750,"Late Aircraft":900,"National Aviation System":2500,"Security":10,"Weather":150},"Carriers":{"Names":"Delta Air Lines Inc.,American Airlines Inc.,JetBlue Airways,United Air Lines Inc.,Southwest Airlines Co.,Alaska Airlines Inc.,Hawaiian Airlines Inc.","Total":7},"Flights":{"Cancelled":100,"Delayed":4500,"Diverted":20,"On Time":21000,"Total":25720},"Minutes Delayed":{"Carrier":45000,"Late Aircraft":54000,"National Aviation System":150000,"Security":600,"Total":135000,"Weather":8100}}}]}}

# select (get WAZ related records) checked
{"type":"nosql","query":{"src_table":"airline_delay","row_filter":{"op":"==","v1":"0::Airport..Code","v2":"WAZ"}}}

# delete all the record related to WAZ checked
{"type":"nosql", "delete": {"table_name": "airline_delay", "expr": {"op":"==","v1":"0::Airport..Code","v2":"WAZ"}}}

# select (get all WAZ related records) it should disappear checked
{"type":"nosql","query":{"src_table":"airline_delay","row_filter":{"op":"==","v1":"0::Airport..Code","v2":"WAZ"}}}

# insert back checked
{"type":"nosql", "insert": {"table_name": "airline_delay", "records": [{"Airport":{"Code":"WAZ","Name":"Los Angeles, Weihao and Zhenyu Internation"},"Time":{"Label":"2023/11","Month":11,"Month Name":"November","Year":2023},"Statistics":{"# of Delays":{"Carrier":750,"Late Aircraft":900,"National Aviation System":2500,"Security":10,"Weather":150},"Carriers":{"Names":"Delta Air Lines Inc.,American Airlines Inc.,JetBlue Airways,United Air Lines Inc.,Southwest Airlines Co.,Alaska Airlines Inc.,Hawaiian Airlines Inc.","Total":7},"Flights":{"Cancelled":100,"Delayed":4500,"Diverted":20,"On Time":21000,"Total":25720},"Minutes Delayed":{"Carrier":45000,"Late Aircraft":54000,"National Aviation System":150000,"Security":600,"Total":135000,"Weather":8100}}}]}}


# projection see what airport delays in year 2023, we only want to output the full name of the airport checked
{"type":"nosql","query":{"src_table":"airline_delay","row_filter":{"op":"==","v1":"0::Time..Year","v2":2023}, "desired_columns": ["::Airport..Name"]}}


# update record (2, b) -> (10, b) checked
{"type":"nosql","update":{"table_name":"airline_delay","expr":{"op":"==","v1":"0::Airport..Code","v2":"WAZ"},"record":{"Airport":{"Code":"ABD","Name":"Los Angeles, Weihao and Zhenyu Internation"},"Time":{"Label":"2023/11","Month":11,"Month Name":"November","Year":2023},"Statistics":{"# of Delays":{"Carrier":750,"Late Aircraft":900,"National Aviation System":2500,"Security":10,"Weather":150},"Carriers":{"Names":"Delta Air Lines Inc.,American Airlines Inc.,JetBlue Airways,United Air Lines Inc.,Southwest Airlines Co.,Alaska Airlines Inc.,Hawaiian Airlines Inc.","Total":7},"Flights":{"Cancelled":100,"Delayed":4500,"Diverted":20,"On Time":21000,"Total":25720},"Minutes Delayed":{"Carrier":45000,"Late Aircraft":54000,"National Aviation System":150000,"Security":600,"Total":135000,"Weather":8100}}}}}
# select (now search for ABD) checked
{"type":"nosql","query":{"src_table":"airline_delay","row_filter":{"op":"==","v1":"0::Airport..Code","v2":"ABD"}}}

# group by col2 & aggregation checked
{"type":"nosql","query":{"src_table":"airline_delay","desired_columns":["::Airport..Code","::Statistics..Flights..Delayed__AVG"],"group_by":["::Airport..Code"]}}
# sorting checked
{"type":"nosql","query":{"src_table":"airline_delay","order_by":[{"column":"::Statistics..Flights..Delayed","is_asc":true}], "desired_columns": ["0::Airport..Code", "0::Statistics..Flights..Delayed"]}}
{"type":"nosql","query":{"src_table":"airline_delay","order_by":[{"column":"::Statistics..Flights..Delayed","is_asc":false}], "desired_columns": ["0::Airport..Code", "0::Statistics..Flights..Delayed"]}}


#join
we will be doing join in sql database

# drop table checked
{"type": "nosql", "drop": {"table_name": "airline_delay"}}

# select (get all records, no results) checked
{"type":"nosql","query":{"src_table":"airline_delay","row_filter":{"op":"==","v1":"0::Airport..Code","v2":"LAX"}}}
